/*<simulation_settings>
<ftestbench_cmd>quartus_eda --gen_testbench --tool=modelsim_oem --format=verilog --write_settings_files=off ev21g1 -c ev21g1 --vector_source="C:/GitHub/ev21g1/ev21g1/simulation/program_memory.vwf" --testbench_file="C:/GitHub/ev21g1/ev21g1/simulation/qsim/program_memory.vwf.vt"</ftestbench_cmd>
<ttestbench_cmd>quartus_eda --gen_testbench --tool=modelsim_oem --format=verilog --write_settings_files=off ev21g1 -c ev21g1 --vector_source="C:/GitHub/ev21g1/ev21g1/simulation/program_memory.vwf" --testbench_file="C:/GitHub/ev21g1/ev21g1/simulation/qsim/simulation/program_memory.vwf.vt"</ttestbench_cmd>
<fnetlist_cmd>quartus_eda --write_settings_files=off --simulation --functional=on --flatten_buses=off --tool=modelsim_oem --format=verilog --output_directory="C:/GitHub/ev21g1/ev21g1/simulation/qsim/" ev21g1 -c ev21g1</fnetlist_cmd>
<tnetlist_cmd>quartus_eda --write_settings_files=off --simulation --functional=off --flatten_buses=off --timescale=1ps --tool=modelsim_oem --format=verilog --output_directory="C:/GitHub/ev21g1/ev21g1/simulation/qsim/" ev21g1 -c ev21g1</tnetlist_cmd>
<modelsim_script>onerror {exit -code 1}
vlib work
vlog -work work ev21g1.vo
vlog -work work program_memory.vwf.vt
vsim -c -t 1ps -L cycloneive_ver -L altera_ver -L altera_mf_ver -L 220model_ver -L sgate_ver -L altera_lnsim_ver work.program_memory_vlg_vec_tst
vcd file -direction ev21g1.msim.vcd
vcd add -internal program_memory_vlg_vec_tst/*
vcd add -internal program_memory_vlg_vec_tst/i1/*
proc simTimestamp {} {
    echo "Simulation time: $::now ps"
    if { [string equal running [runStatus]] } {
        after 2500 simTimestamp
    }
}
after 2500 simTimestamp
run -all
quit -f
</modelsim_script>
<modelsim_script_timing>onerror {exit -code 1}
vlib work
vlog -work work ev21g1.vo
vlog -work work simulation/program_memory.vwf.vt
vsim -novopt -c -t 1ps -L cycloneive_ver -L altera_ver -L altera_mf_ver -L 220model_ver -L sgate_ver -L altera_lnsim_ver work.program_memory_vlg_vec_tst
vcd file -direction ev21g1.msim.vcd
vcd add -internal program_memory_vlg_vec_tst/*
vcd add -internal program_memory_vlg_vec_tst/i1/*
proc simTimestamp {} {
    echo "Simulation time: $::now ps"
    if { [string equal running [runStatus]] } {
        after 2500 simTimestamp
    }
}
after 2500 simTimestamp
run -all
quit -f
</modelsim_script_timing>
<hdl_lang>verilog</hdl_lang>
</simulation_settings>*/
/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 2020  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and any partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details, at
https://fpgasoftware.intel.com/eula.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 400.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("bsr")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("cte")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("cte[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "cte";
}

SIGNAL("cte[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "cte";
}

SIGNAL("cte[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "cte";
}

SIGNAL("cte[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "cte";
}

SIGNAL("cte[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "cte";
}

SIGNAL("cte[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "cte";
}

SIGNAL("cte[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "cte";
}

SIGNAL("cte[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "cte";
}

SIGNAL("cte[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "cte";
}

SIGNAL("cte[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "cte";
}

SIGNAL("cte[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "cte";
}

SIGNAL("cte[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "cte";
}

SIGNAL("cte[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "cte";
}

SIGNAL("cte[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "cte";
}

SIGNAL("cte[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "cte";
}

SIGNAL("cte[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "cte";
}

SIGNAL("jmp")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("out[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out";
}

SIGNAL("out[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out";
}

SIGNAL("out[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out";
}

SIGNAL("out[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out";
}

SIGNAL("out[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out";
}

SIGNAL("out[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out";
}

SIGNAL("out[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out";
}

SIGNAL("out[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out";
}

SIGNAL("out[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out";
}

SIGNAL("out[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out";
}

SIGNAL("out[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out";
}

SIGNAL("out[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out";
}

SIGNAL("out[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out";
}

SIGNAL("out[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out";
}

SIGNAL("out[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out";
}

SIGNAL("out[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out";
}

SIGNAL("out[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out";
}

SIGNAL("out[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out";
}

SIGNAL("out[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out";
}

SIGNAL("out[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out";
}

SIGNAL("out[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out";
}

SIGNAL("out[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out";
}

SIGNAL("out[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out";
}

SIGNAL("out[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out";
}

SIGNAL("out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out";
}

SIGNAL("out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out";
}

SIGNAL("out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out";
}

SIGNAL("out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out";
}

SIGNAL("out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out";
}

SIGNAL("out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out";
}

SIGNAL("out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out";
}

SIGNAL("out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out";
}

SIGNAL("reset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ret")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Addres")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Addres[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Addres";
}

SIGNAL("Addres[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Addres";
}

SIGNAL("Addres[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Addres";
}

SIGNAL("Addres[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Addres";
}

SIGNAL("Addres[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Addres";
}

SIGNAL("Addres[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Addres";
}

SIGNAL("Addres[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Addres";
}

SIGNAL("Addres[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Addres";
}

SIGNAL("Addres[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Addres";
}

SIGNAL("Addres[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Addres";
}

SIGNAL("Addres[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Addres";
}

SIGNAL("Addres[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Addres";
}

SIGNAL("Addres[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Addres";
}

SIGNAL("Addres[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Addres";
}

SIGNAL("Addres[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Addres";
}

SIGNAL("Addres[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Addres";
}

SIGNAL("Instruction")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Instruction[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction";
}

SIGNAL("Instruction[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction";
}

SIGNAL("Instruction[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction";
}

SIGNAL("Instruction[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction";
}

SIGNAL("Instruction[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction";
}

SIGNAL("Instruction[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction";
}

SIGNAL("Instruction[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction";
}

SIGNAL("Instruction[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction";
}

SIGNAL("Instruction[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction";
}

SIGNAL("Instruction[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction";
}

SIGNAL("Instruction[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction";
}

SIGNAL("Instruction[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction";
}

SIGNAL("Instruction[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction";
}

SIGNAL("Instruction[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction";
}

SIGNAL("Instruction[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction";
}

SIGNAL("Instruction[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction";
}

SIGNAL("Instruction[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction";
}

SIGNAL("Instruction[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction";
}

SIGNAL("Instruction[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction";
}

SIGNAL("Instruction[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction";
}

SIGNAL("Instruction[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction";
}

SIGNAL("Instruction[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction";
}

SIGNAL("Instruction[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction";
}

SIGNAL("Instruction[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction";
}

SIGNAL("Instruction[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction";
}

SIGNAL("Instruction[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction";
}

SIGNAL("Instruction[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction";
}

SIGNAL("Instruction[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction";
}

SIGNAL("Instruction[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction";
}

SIGNAL("Instruction[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction";
}

SIGNAL("Instruction[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction";
}

SIGNAL("Instruction[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction";
}

TRANSITION_LIST("bsr")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 170.0;
	}
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 20;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("cte[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 400.0;
	}
}

TRANSITION_LIST("cte[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 400.0;
	}
}

TRANSITION_LIST("cte[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 400.0;
	}
}

TRANSITION_LIST("cte[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 400.0;
	}
}

TRANSITION_LIST("cte[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 400.0;
	}
}

TRANSITION_LIST("cte[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 400.0;
	}
}

TRANSITION_LIST("cte[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 400.0;
	}
}

TRANSITION_LIST("cte[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 400.0;
	}
}

TRANSITION_LIST("cte[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 400.0;
	}
}

TRANSITION_LIST("cte[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 400.0;
	}
}

TRANSITION_LIST("cte[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 400.0;
	}
}

TRANSITION_LIST("cte[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 310.0;
	}
}

TRANSITION_LIST("cte[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 170.0;
	}
}

TRANSITION_LIST("cte[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 310.0;
	}
}

TRANSITION_LIST("cte[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 170.0;
	}
}

TRANSITION_LIST("cte[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 270.0;
	}
}

TRANSITION_LIST("jmp")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 270.0;
	}
}

TRANSITION_LIST("out[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("out[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("out[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("out[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("out[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("out[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("out[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("out[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("out[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("out[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("out[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("out[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("out[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("out[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("out[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("out[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("out[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("out[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("out[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("out[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("out[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("out[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("out[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("out[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("out[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("out[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("reset")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 380.0;
	}
}

TRANSITION_LIST("ret")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 90.0;
	}
}

TRANSITION_LIST("Addres[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("Addres[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("Addres[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("Addres[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("Addres[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("Addres[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("Addres[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("Addres[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("Addres[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("Addres[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("Addres[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("Addres[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("Addres[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("Addres[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("Addres[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("Addres[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("Instruction[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("Instruction[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("Instruction[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("Instruction[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("Instruction[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("Instruction[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("Instruction[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("Instruction[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("Instruction[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("Instruction[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("Instruction[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("Instruction[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("Instruction[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("Instruction[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("Instruction[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("Instruction[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("Instruction[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("Instruction[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("Instruction[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("Instruction[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("Instruction[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("Instruction[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("Instruction[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("Instruction[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("Instruction[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("Instruction[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("Instruction[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("Instruction[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("Instruction[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("Instruction[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("Instruction[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

TRANSITION_LIST("Instruction[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 199.0;
		LEVEL 0 FOR 201.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "reset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "jmp";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "bsr";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ret";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cte";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
	CHILDREN = 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21;
}

DISPLAY_LINE
{
	CHANNEL = "cte[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "cte[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "cte[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "cte[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "cte[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "cte[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "cte[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "cte[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "cte[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "cte[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "cte[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "cte[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "cte[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "cte[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "cte[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "cte[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "Addres";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 22;
	TREE_LEVEL = 0;
	CHILDREN = 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38;
}

DISPLAY_LINE
{
	CHANNEL = "Addres[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "Addres[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "Addres[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "Addres[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "Addres[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "Addres[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "Addres[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "Addres[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "Addres[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "Addres[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "Addres[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "Addres[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "Addres[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "Addres[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "Addres[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "Addres[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 39;
	TREE_LEVEL = 0;
	CHILDREN = 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 72;
	TREE_LEVEL = 0;
	CHILDREN = 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104;
}

DISPLAY_LINE
{
	CHANNEL = "out[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "out[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "out[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "out[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "out[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "out[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "out[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "out[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 80;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "out[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "out[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 82;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "out[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 83;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "out[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 84;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "out[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 85;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "out[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 86;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "out[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 87;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "out[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 88;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "out[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 89;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "out[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 90;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "out[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 91;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "out[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 92;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "out[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 93;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "out[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 94;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "out[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 95;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "out[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 96;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 97;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 98;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 99;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 100;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 101;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 102;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 103;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 104;
	TREE_LEVEL = 1;
	PARENT = 72;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
